Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2023.07.14 - 21:37:39]

cargapantallaplet.asm
Errors: 0

       1   00:0000                      ;programa que carga una pantalla en SC2 para probar y ver pantallas como herramienta auxiliar
       2   00:0000                      ;usa 3 ficheros de datos
       3   00:0000                      ;mapa de los 3 bancos
       4   00:0000                      ;colores y patrones de un banco que se repite en los otros 2
       5   00:0000                      ;se modificará según necesidades
       6   00:0000                      
       7   00:0000                      			OUTPUT 			"cargapantallaplet.rom"
       8   00:4000                      		
       9   00:4000                      ;;CONSTANTES
      10   00:4000                      ;FUNCIONES BIOS
      11   00:4000  (00:009F)           CHGET				equ		#009F	;espera a que se pulse una tecla
      12   00:4000  (00:005C)           LDIRVM				equ		#005C	;RAM/ROM -> VRAM
      13   00:4000  (00:007E)           SETGRP				equ		#007E	;cambia modo pantalla a SC2
      14   00:4000  (00:0062)           CHGCLR  			equ		#0062	;cambia color de pantalla (toca A y direcciones)
      15   00:4000  (00:F3E9)           FORCLR				equ		#F3E9	;zona memoria color foreground
      16   00:4000  (00:F3EA)           BAKCLR  			equ		#F3EA	;zona memoria color background
      17   00:4000  (00:F3EB)           BDRCLR 				equ		#F3EB	;zona memoria bordercolor
      18   00:4000                      
      19   00:4000                      ;MAPA VDP
      20   00:4000  (00:0000)           CHRTBL				equ		#0000
      21   00:4000  (00:1800)           TILMAP				equ		#1800
      22   00:4000  (00:2000)           CLRTBL				equ		#2000
      23   00:4000                      
      24   00:4000                      			
      25   00:4000                      ;;INICIO ROM		
      26   00:4000                      			ORG				#4000
      27   00:4000                      
      28   00:4000                      
      29   00:4000                      ;;CABECERA FICHERO ROM
      30   00:4000  41 42               			DB 				"AB" ;#41,#42 Identificador de rom
      31   00:4002                      			DW 				START,0,0,0,0,0,0  ;Inicio codigo. Puede ser qualquier dirección
      31   00:4002  10 40 00 00 00 00 00 00 00 00 00 00 00 00 
      32   00:4010                      
      33   00:4010                      		
      34   00:4010                      START:		
      35   00:4010  CD 7E 00            			CALL			SETGRP
      36   00:4013                      
      37   00:4013                      			;cargando banco 0
      38   00:4013                      			;cargamos los patrones
      39   00:4013  21 63 40            			LD				HL, tiles_patrones
      40   00:4016  11 00 00            			LD				DE, CHRTBL
      41   00:4019  CD AD 40            			CALL			depack_VRAM
      42   00:401C                      			;cargamos los colores de los patrones
      43   00:401C  21 6D 40            			LD				HL, tiles_color
      44   00:401F  11 00 20            			LD				DE, CLRTBL
      45   00:4022  CD AD 40            			CALL			depack_VRAM
      46   00:4025                      			;cargando banco 1
      47   00:4025                      			;cargamos los patrones
      48   00:4025  21 63 40            			LD				HL, tiles_patrones
      49   00:4028  11 00 08            			LD				DE, CHRTBL + #0800
      50   00:402B  CD AD 40            			CALL			depack_VRAM
      51   00:402E                      			;cargamos los colores de los patrones
      52   00:402E  21 6D 40            			LD				HL, tiles_color
      53   00:4031  11 00 28            			LD				DE, CLRTBL + #0800
      54   00:4034  CD AD 40            			CALL			depack_VRAM
      55   00:4037                      			;cargando banco 2
      56   00:4037                      			;cargamos los patrones
      57   00:4037  21 63 40            			LD				HL, tiles_patrones
      58   00:403A  11 00 10            			LD				DE, CHRTBL + #1000
      59   00:403D  CD AD 40            			CALL			depack_VRAM
      60   00:4040                      			;cargamos los colores de los patrones
      61   00:4040  21 6D 40            			LD				HL, tiles_color
      62   00:4043  11 00 30            			LD				DE, CLRTBL + #1000
      63   00:4046  CD AD 40            			CALL			depack_VRAM
      64   00:4049                      			
      65   00:4049                      			;CARGAMOS MAPA (EN ESTE CASO EN LOS 3 BANCOS)
      66   00:4049  21 7E 40            			LD				HL, tiles_mapa
      67   00:404C  11 00 18            			LD				DE, TILMAP			;destino en vram
      68   00:404F  CD AD 40            			CALL			depack_VRAM
      69   00:4052                      			
      70   00:4052                      			;ESPERA A QUE SE PULSE UNA TECLA
      71   00:4052  CD 9F 00            			CALL			CHGET
      72   00:4055                      			
      73   00:4055                      			;RETORNA AL BASIC
      74   00:4055  C9                  			RET		
      75   00:4056                      ;END: (main)
      76   00:4056                      		
      77   00:4056                      		
      78   00:4056                      ;dejo esto por si me interesa cambiar color de fondo para que parezca más
      79   00:4056                      ;al resultado final
      80   00:4056                      color_pantalla:
      81   00:4056  AF                  			XOR		 		 A					;color negro
      82   00:4057  32 E9 F3            			LD				(FORCLR), A
      83   00:405A  32 EA F3            			LD				(BAKCLR), A
      84   00:405D  32 EB F3            			LD				(BDRCLR), A
      85   00:4060  C3 62 00            			JP				CHGCLR
      86   00:4063                      ;fin_color_pantalla_negro:
      87   00:4063                      	
      88   00:4063                      
      89   00:4063  (000A)              tiles_patrones:				incbin "prueba.bin.plet5.til"
      90   00:406D  (0011)              tiles_color:				incbin "prueba.bin.plet5.col"
      91   00:407E  (002F)              tiles_mapa:					incbin "prueba.map.bin.plet5"
      92   00:40AD                      
      93   00:40AD                      
      94   00:40AD                      ;;=====================================================
      95   00:40AD                      ;;DEFINICIÓN DE SUBRUTINAS DE FERNANDO PARA COMPRESIÓN
      96   00:40AD                      ;;=====================================================
      97   00:40AD                      ;Este include lleva la rutina de descompresión de ROM/RAM a VRAM de pletter
      98   00:40AD                      ;Está adaptada de la original a sjasm
      99   00:40AD                      ;	HL = RAM/ROM source	; DE = VRAM destination
     100   00:40AD                      depack_VRAM:
     101   00:40AD                      	include "PL_VRAM_Depack_SJASM.asm"
       1.  00:40AD                      ; nota importante: esta parte de código es adaptación del código de Saphyre
       2.  00:40AD                      ;;por D. Fernando García (@BitVision) (al que siempre le estaré agradecido)
       3.  00:40AD                      ;;su difusión depende de su consentimiento o por lo menos de su mención como autor
       4.  00:40AD                      ;-----------------------------------------------------------
       5.  00:40AD                      ; Pletter v0.5b VRAM Depacker v1.1 - 16Kb version
       6.  00:40AD                      ; HL = RAM/ROM source ; DE = VRAM destination
       7.  00:40AD                      ;-----------------------------------------------------------
       8.  00:40AD  F3                  	di
       9.  00:40AE                      
      10.  00:40AE                      ; VRAM address setup
      11.  00:40AE  7B                  	ld	a,e
      12.  00:40AF  D3 99               	out	[099h],a
      13.  00:40B1                      ;;------------------------
      14.  00:40B1  00 00               [2]	NOP
      15.  00:40B3                      ;;------------------------
      16.  00:40B3  7A                  	ld	a,d
      17.  00:40B4  F6 40               	or	040h
      18.  00:40B6  D3 99               	out	[099h],a
      19.  00:40B8                      ;;------------------------
      20.  00:40B8  00 00               [2]	NOP
      21.  00:40BA                      ;;------------------------
      22.  00:40BA                      
      23.  00:40BA                      ; Initialization
      24.  00:40BA  7E                  	ld	a,[hl]
      25.  00:40BB  23                  	inc	hl
      26.  00:40BC  D9                  	exx
      27.  00:40BD  11 00 00            	ld	de,0
      28.  00:40C0  87                  	add	a,a
      29.  00:40C1  3C                  	inc	a
      30.  00:40C2  CB 13               	rl	e
      31.  00:40C4  87                  	add	a,a
      32.  00:40C5  CB 13               	rl	e
      33.  00:40C7  87                  	add	a,a
      34.  00:40C8  CB 13               	rl	e
      35.  00:40CA  CB 13               	rl	e
      36.  00:40CC  21 8F 41            	ld	hl,modes
      37.  00:40CF  19                  	add	hl,de
      38.  00:40D0  5E                  	ld	e,[hl]
      39.  00:40D1  DD 6B               	ld	ixl,e
      40.  00:40D3  23                  	inc	hl
      41.  00:40D4  5E                  	ld	e,[hl]
      42.  00:40D5  DD 63               	ld	ixh,e
      43.  00:40D7  1E 01               	ld	e,1
      44.  00:40D9  D9                  	exx
      45.  00:40DA  FD 21 E5 40         	ld	iy,loop
      46.  00:40DE                      
      47.  00:40DE                      ; Main depack loop
      48.  00:40DE  0E 98               literal:ld	c,098h
      49.  00:40E0  ED A3               	outi
      50.  00:40E2                      ;;------------------------
      51.  00:40E2  00 00               [2]	NOP
      52.  00:40E4                      ;;------------------------
      53.  00:40E4  13                  	inc	de
      54.  00:40E5  87                  loop:	add	a,a
      55.  00:40E6  CC 83 41              	call	z,getbit
      56.  00:40E9  30 F3               	jr	nc,literal
      57.  00:40EB                      
      58.  00:40EB                      ; Compressed data
      59.  00:40EB  D9                  	exx
      60.  00:40EC  62                  	ld	h,d
      61.  00:40ED  6B                  	ld	l,e
      62.  00:40EE  87                  getlen: add	a,a
      63.  00:40EF  CC 87 41            	call	z,getbitexx
      64.  00:40F2  30 1D               	jr	nc,lenok
      65.  00:40F4  87                  lus:	add	a,a
      66.  00:40F5  CC 87 41            	call	z,getbitexx
      67.  00:40F8  ED 6A               	adc	hl,hl
      68.  00:40FA  D8                  	ret	c
      69.  00:40FB  87                  	add	a,a
      70.  00:40FC  CC 87 41            	call	z,getbitexx
      71.  00:40FF  30 10               	jr	nc,lenok
      72.  00:4101  87                  	add	a,a
      73.  00:4102  CC 87 41            	call	z,getbitexx
      74.  00:4105  ED 6A               	adc	hl,hl
      75.  00:4107  DA 8D 41            	jp	c,Depack_out
      76.  00:410A  87                  	add	a,a
      77.  00:410B  CC 87 41            	call	z,getbitexx
      78.  00:410E  DA F4 40            	jp	c,lus
      79.  00:4111  23                  lenok:  inc	hl
      80.  00:4112  D9                  	exx
      81.  00:4113  4E                  	ld	c,[hl]
      82.  00:4114  23                  	inc	hl
      83.  00:4115  06 00               	ld	b,0
      84.  00:4117  CB 79               	bit	7,c
      85.  00:4119  CA 4C 41            	jp	z,offsok
      86.  00:411C  DD E9               	jp	ix
      87.  00:411E                      
      88.  00:411E  87                  mode7:  add	a,a
      89.  00:411F  CC 83 41              	call	z,getbit
      90.  00:4122  CB 10               	rl	b
      91.  00:4124  87                  mode6:	add	a,a
      92.  00:4125  CC 83 41              	call	z,getbit
      93.  00:4128  CB 10               	rl	b
      94.  00:412A  87                  mode5:  add	a,a
      95.  00:412B  CC 83 41              	call	z,getbit
      96.  00:412E  CB 10               	rl	b
      97.  00:4130  87                  mode4:  add	a,a
      98.  00:4131  CC 83 41              	call	z,getbit
      99.  00:4134  CB 10               	rl	b
     100.  00:4136  87                  mode3:  add	a,a
     101.  00:4137  CC 83 41              	call	z,getbit
     102.  00:413A  CB 10               	rl	b
     103.  00:413C  87                  mode2:	add	a,a
     104.  00:413D  CC 83 41              	call	z,getbit
     105.  00:4140  CB 10               	rl	b
     106.  00:4142  87                  	add	a,a
     107.  00:4143  CC 83 41              	call	z,getbit
     108.  00:4146  30 04               	jr	nc,offsok
     109.  00:4148  B7                  	or	a
     110.  00:4149  04                  	inc	b
     111.  00:414A  CB B9               	res	7,c
     112.  00:414C  03                  offsok: inc	bc
     113.  00:414D  E5                  	push	hl
     114.  00:414E  D9                  	exx
     115.  00:414F  E5                  	push	hl
     116.  00:4150  D9                  	exx
     117.  00:4151  6B                  	ld	l,e
     118.  00:4152  62                  	ld	h,d
     119.  00:4153  ED 42               	sbc	hl,bc
     120.  00:4155  C1                  	pop	bc
     121.  00:4156  F5                  	push	af
     122.  00:4157  7D                  .loop:	ld	a,l
     123.  00:4158  D3 99               	out	[099h],a
     124.  00:415A                      ;;------------------------
     125.  00:415A  00 00               [2]	NOP
     126.  00:415C                      ;;------------------------
     127.  00:415C  7C                  	ld	a,h
     128.  00:415D  00                  	nop                     ; VDP timing
     129.  00:415E  D3 99               	out	[099h],a
     130.  00:4160                      ;;------------------------
     131.  00:4160  00 00               [2]	NOP
     132.  00:4162                      ;;------------------------
     133.  00:4162  00                  	nop                     ; VDP timing
     134.  00:4163  DB 98               	in	a,[098h]
     135.  00:4165  08                  	ex	af,af'
     136.  00:4166  7B                  	ld	a,e
     137.  00:4167  00                  	nop			; VDP timing
     138.  00:4168  D3 99               	out	[099h],a
     139.  00:416A                      ;;------------------------
     140.  00:416A  00 00               [2]	NOP
     141.  00:416C                      ;;------------------------
     142.  00:416C  7A                  	ld	a,d
     143.  00:416D  F6 40               	or	040h
     144.  00:416F  D3 99               	out	[099h],a
     145.  00:4171                      ;;------------------------
     146.  00:4171  00 00               [2]	NOP
     147.  00:4173                      ;;------------------------
     148.  00:4173  08                  	ex	af,af'
     149.  00:4174  00                  	nop			; VDP timing
     150.  00:4175  D3 98               	out	[098h],a
     151.  00:4177                      ;;------------------------
     152.  00:4177  00 00               [2]	NOP
     153.  00:4179                      ;;------------------------
     154.  00:4179  13                  	inc	de
     155.  00:417A  ED A1               	cpi
     156.  00:417C  EA 57 41            	jp	pe,.loop
     157.  00:417F  F1                  	pop	af
     158.  00:4180  E1                  	pop	hl
     159.  00:4181  FD E9               	jp	iy
     160.  00:4183                      
     161.  00:4183  7E                  getbit: ld	a,[hl]
     162.  00:4184  23                  	inc	hl
     163.  00:4185  17                  	rla
     164.  00:4186  C9                  	ret
     165.  00:4187                      
     166.  00:4187                      getbitexx:
     167.  00:4187  D9                  	exx
     168.  00:4188  7E                  	ld	a,[hl]
     169.  00:4189  23                  	inc	hl
     170.  00:418A  D9                  	exx
     171.  00:418B  17                  	rla
     172.  00:418C  C9                  	ret
     173.  00:418D                      
     174.  00:418D                      ; Depacker exit
     175.  00:418D                      Depack_out:
     176.  00:418D  FB                  	ei
     177.  00:418E  C9                  	ret
     178.  00:418F                      
     179.  00:418F                      modes:
     180.  00:418F  4C 41               	dw	offsok
     181.  00:4191  3C 41               	dw	mode2
     182.  00:4193  36 41               	dw	mode3
     183.  00:4195  30 41               	dw	mode4
     184.  00:4197  2A 41               	dw	mode5
     185.  00:4199  24 41               	dw	mode6
     186.  00:419B  1E 41               	dw	mode7
     102   00:419D                      

    LABELS
-------------------------------------------------
00:0000009F   CHGET
00:0000005C X LDIRVM
00:0000007E   SETGRP
00:00000062   CHGCLR
00:0000F3E9   FORCLR
00:0000F3EA   BAKCLR
00:0000F3EB   BDRCLR
00:00000000   CHRTBL
00:00001800   TILMAP
00:00002000   CLRTBL
00:00004010   START
00:00004056 X color_pantalla
00:00004063   tiles_patrones
00:0000406D   tiles_color
00:0000407E   tiles_mapa
00:000040AD   depack_VRAM
00:000040DE   literal
00:000040E5   loop
00:000040EE X getlen
00:000040F4   lus
00:00004111   lenok
00:0000411E   mode7
00:00004124   mode6
00:0000412A   mode5
00:00004130   mode4
00:00004136   mode3
00:0000413C   mode2
00:0000414C   offsok
00:00004157   offsok.loop
00:00004183   getbit
00:00004187   getbitexx
00:0000418D   Depack_out
00:0000418F   modes


 Output: cargapantallaplet.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: cargapantallaplet.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 0000019D

   Address   Length Align   Label
   00004000     413         START
